# ~/.bashrc: executed by bash(1) for non-login shells.
# see /usr/share/doc/bash/examples/startup-files (in the package bash-doc)
# for examples

# If not running interactively, don't do anything
case $- in
    *i*) ;;
      *) return;;
esac

# If not a tmux or screen session, enter a tmux or screen session
# tmux is preferred over screen
if [[ ! -n "$TMUX" ]]; then
    if which tmux &> /dev/null; then
        exec tmux -2
    elif [[ ! -n "$STY" ]] && which screen &> /dev/null; then
        exec screen
    fi
fi

# Store the current X display as the latest display
echo $DISPLAY > $HOME/.latest_X_display

# Save and reload the history after each command
export PROMPT_COMMAND='export DISPLAY=$(cat $HOME/.latest_X_display)'

# Increase the umber of simultaneous processes allowed to run
ulimit -u 8192

# Use user-defined inputrc file
export INPUTRC=~/.inputrc

# For interactive shells, check the window size after each command and, if
# necessary, update the values of LINES and COLUMNS.
if [ "$PS1" ]; then
    # Turn on checkwinsize
    shopt -s checkwinsize
fi

# Detect ssh sessions
if [ -n "$SSH_CLIENT" ] || [ -n "$SSH_TTY" ]; then
  SESSION_TYPE=remote/ssh
# many other tests omitted
else
  case $(ps -o comm= -p $PPID) in
    sshd|*/sshd) SESSION_TYPE=remote/ssh;;
  esac
fi

if which host > /dev/null 2>&1; then
    if [ "$SESSION_TYPE" != "remote/ssh" ]; then
        host +local:root > /dev/null 2>&1
    fi
fi

# Use vi mode for commandline
set -o vi

# Allow clobbering of files (my preference, in case system settings turn it off)
set +o noclobber

# Complete sudo with commands
#complete -cf sudo

# Set shell options
shopt -s cdspell
shopt -s cmdhist
shopt -s dotglob
shopt -s expand_aliases
shopt -s extglob
shopt -s hostcomplete
shopt -s nocaseglob

# Include the system wide bashrc file
if [ -f /etc/bash.bashrc ]; then
   . /etc/bash.bashrc
fi

###########################################################################
# History Setup
###########################################################################

# Use a non-default history file to avoid it getting erased when bash fails to
# load completely
export HISTFILE=$HOME/.bash_history_extended

# Avoid duplicates in the history
export HISTCONTROL=ignoreboth:erasedups

# append to the history file, don't overwrite it
shopt -s histappend

# For setting history length see HISTSIZE and HISTFILESIZE in bash(1)
HISTSIZE=Infinite
HISTFILESIZE=Infinite

# Save and reload the history after each command
export PROMPT_COMMAND="history -a; history -c; history -r; $PROPMT_COMMAND"

###########################################################################

# If set, the pattern "**" used in a pathname expansion context will
# match all files and zero or more directories and subdirectories.
shopt -s globstar

# make less more friendly for non-text input files, see lesspipe(1)
[ -x /usr/bin/lesspipe ] && eval "$(SHELL=/bin/sh lesspipe)"

# set variable identifying the chroot you work in (used in the prompt below)
if [ -z "${debian_chroot:-}" ] && [ -r /etc/debian_chroot ]; then
    debian_chroot=$(cat /etc/debian_chroot)
fi

###########################################################################
# Set up command prompt
###########################################################################

# Setup my prompt
PS1="\n\[\e[0;31m\][\[\e[1;34m\]\$(parse_git_branch)\[\e[0;31m\]]"
PS1="$PS1\n\[\e[0;31m\][\[\e[0;36m\]\w\[\e[0;31m\]]"
PS1="$PS1\n\[\e[0;31m\][\[\e[0;32m\]\t\[\e[0;31m\]]"
PS1="$PS1\[\e[1;33m\]\u\[\e[0;31m\]@\[\e[1;30m\]\h"
PS1="$PS1\[\e[0;31m\]\$ \[\e[0;0m\]"

###########################################################################

# enable color support of ls and also add handy aliases
if [ -x /usr/bin/dircolors ]; then
    test -r ~/.dircolors && eval "$(dircolors -b ~/.dircolors)" || eval "$(dircolors -b)"
    alias ls='ls --color=auto'
    #alias dir='dir --color=auto'
    #alias vdir='vdir --color=auto'

    alias grep='grep --color=auto'
    alias fgrep='fgrep --color=auto'
    alias egrep='egrep --color=auto'
fi

# some more ls aliases
alias ll='ls -alF'
alias la='ls -A'
alias l='ls -CF'

# Add an "alert" alias for long running commands.  Use like so:
#   sleep 10; alert
#alias alert='notify-send --urgency=low -i "$([ $? = 0 ] && echo terminal || echo error)" "$(history|tail -n1|sed -e '\''s/^\s*[0-9]\+\s*//;s/[;&|]\s*alert$//'\'')"'

# Alias definitions.
# You may want to put all your additions into a separate file like
# ~/.bash_aliases, instead of adding them here directly.
# See /usr/share/doc/bash-doc/examples in the bash-doc package.
filelist="$HOME/.bash_aliases $HOME/.bash_complete"
for file in $filelist; do
    if [ -f $file ]; then
        . $file
    fi
done

# Because opensuse tries to keep them out, add sbins to my path
#export PATH=$HOME/bin:$PATH
#export PATH=$HOME/scripts:$PATH
#export PATH=$PATH:/bin
#export PATH=$PATH:/sbin
#export PATH=$PATH:/usr/sbin

# Define terminal as 256 color xterm
if [[ -n "$TMUX" ]]; then
    export TERM=tmux-256color
else
    export TERM=xterm-256color
fi

# Define python startup file
if [[ -r $HOME/.pythonrc ]]; then
    export PYTHONSTARTUP="$HOME/.pythonrc"
fi

# Specify my editor
export EDITOR="/usr/bin/vim"
#export EDITOR="/usr/bin/gvim -f"

# Specify my browser
export BROWSER=/usr/bin/google-chrome-stable

# enable programmable completion features (you don't need to enable
# this, if it's already enabled in /etc/bash.bashrc and /etc/profile
# sources /etc/bash.bashrc).
if ! shopt -oq posix; then
  if [ -f /usr/share/bash-completion/bash_completion ]; then
    . /usr/share/bash-completion/bash_completion
  elif [ -f /etc/bash_completion ]; then
    . /etc/bash_completion
  fi
fi

